from scipy.special import binom
from math import log10

def num_passwords(length, num_digits, num_symbols):
    """
    Returns number of passwords which can be generated by a password manager
    with the given settings.
    """
    # upper and lower case, excluding "ambigous" characters I, l and O.
    alphabet_size = 26 * 2  - 3
    # Digits 0-9, excluding ambiguous 0 and 1.
    digit_size = 10 - 2
    symbol_size = 31  # manual counting on an American keyboard
    num_alpha = length - num_digits - num_symbols
    return (
        (binom(length, num_alpha) * alphabet_size ** num_alpha)
        * (binom(length - num_alpha, num_digits) * digit_size ** num_digits)
        * symbol_size ** num_digits
    )


# https://twitter.com/jpgoldberg/status/1314629099416178689
# Password matching /[a-zA-Z0-9]{10}/
num_passwords_in_example = (26 + 26 + 10) ** 10
print(num_passwords_in_example)


print(num_passwords(15, 1, 1))

# Number of orders of magnitude different:
print(log10(num_passwords(15, 1, 1) / num_passwords_in_example))
print(log10(num_passwords(20, 1, 1) / num_passwords_in_example))
print(log10(num_passwords(40, 1, 1) / num_passwords_in_example))