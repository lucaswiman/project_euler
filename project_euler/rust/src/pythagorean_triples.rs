pub fn euclid_forumla_triples_iter() -> impl Iterator<Item = (u64, u64, u64)> {
  // See https://en.wikipedia.org/wiki/Pythagorean_triple ("Euclid's formula")
  // given an arbitrary pair of integers m and n with m > n > 0.
  // The formula states that the integers
  //     a=m^2-n^2, b=2*m*n, c=m^2+n^2
  // form a Pythagorean triple.
  // The triple generated by Euclid's formula is primitive if and only if m and n are coprime and one of them is even.
  // ...
  // Every primitive triple arises (after the exchange of a and b, if a is even) from a unique pair of coprime numbers m, n, one of which is even.
  
  return (2..).map(|m|
    (1..m).map(move |n| (m * m - n *n, 2 * m * n, m * m + n * n))
  ).flatten();
  
}